{"version":3,"sources":["../src/block.js"],"names":["Block","options","count","index","thaws","item","next","_next","add","items","addArray","insert","insertArray","i","length","stop","thaw","push"],"mappings":";;;;;;;;AAAA;;;;;;;;AAEA;;;;;;IAMqBA,K;AACnB,iBAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAAA;;AAC1B,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKF,KAAL,GAAaA,SAAS,GAAtB;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAED;;;;;;;;;wBAKII,I,EAAM;AACR,UAAMC,OAAO,KAAKC,KAAL,EAAb;AACAD,WAAKE,GAAL,CAASH,IAAT;;AAEA,aAAO,IAAP;AACD;;AAED;;;;;;;;6BAKSI,K,EAAO;AACd,UAAMH,OAAO,KAAKC,KAAL,EAAb;AACAD,WAAKI,QAAL,CAAcD,KAAd;;AAEA,aAAO,IAAP;AACD;;AAED;;;;;;;;2BAKOJ,I,EAAM;AACX,UAAMC,OAAO,KAAKC,KAAL,EAAb;AACAD,WAAKK,MAAL,CAAYN,IAAZ;;AAEA,aAAO,IAAP;AACD;;AAED;;;;;;;;gCAKYI,K,EAAO;AACjB,UAAMH,OAAO,KAAKC,KAAL,EAAb;AACAD,WAAKM,WAAL,CAAiBH,KAAjB;;AAEA,aAAO,IAAP;AACD;;AAED;;;;;;;2BAIO;AACL,WAAK,IAAII,IAAI,CAAb,EAAeA,IAAI,KAAKT,KAAL,CAAWU,MAA9B,EAAqCD,GAArC,EAA0C;AACxC,aAAKT,KAAL,CAAWS,CAAX,EAAcE,IAAd;AACD;AACD,aAAO,IAAP;AACD;;AAED;;;;;;;;4BAKQ;AACN,UAAIC,OAAO,IAAX;AACA,UAAMZ,QAAQ,KAAKA,KAAnB;;AAEA,UAAIA,MAAMU,MAAN,GAAe,KAAKZ,KAAxB,EAA+B;AAC7BE,cAAMa,IAAN,CAAWD,OAAO,eAAS,EAAT,EAAa,KAAKf,OAAlB,CAAlB;AACD,OAFD,MAEO;AACLe,eAAOZ,MAAM,KAAKD,KAAX,CAAP;AACD;AACD,WAAKA,KAAL;AACA,UAAI,KAAKA,KAAL,IAAc,KAAKD,KAAvB,EAA8B;AAC5B,aAAKC,KAAL,GAAa,CAAb;AACD;;AAED,aAAOa,IAAP;AACD;;;;;;kBAvFkBhB,K;AAwFpB","file":"block.js","sourcesContent":["import Thaw from './';\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nexport default class Block {\n  constructor(options, count) {\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n  add(item) {\n    const next = this._next();\n    next.add(item);\n\n    return this;\n  }\n\n  /**\n   * add an Array to the end of items\n   * @param items\n   * @returns {Block}\n   */\n  addArray(items) {\n    const next = this._next();\n    next.addArray(items);\n\n    return this;\n  }\n\n  /**\n   * insert an item into items @ current position\n   * @param item\n   * @returns {Block}\n   */\n  insert(item) {\n    const next = this._next();\n    next.insert(item);\n\n    return this;\n  }\n\n  /**\n   * insert and array into items @ current position\n   * @param items\n   * @returns {Block}\n   */\n  insertArray(items) {\n    const next = this._next();\n    next.insertArray(items);\n\n    return this;\n  }\n\n  /**\n   * Stops all thaws in this block\n   * @returns {Block}\n   */\n  stop() {\n    for (let i = 0;i < this.thaws.length;i++) {\n      this.thaws[i].stop();\n    }\n    return this;\n  }\n\n  /**\n   * Get next available in block\n   * @returns {*}\n   * @private\n   */\n  _next() {\n    let thaw = null;\n    const thaws = this.thaws;\n\n    if (thaws.length < this.count) {\n      thaws.push(thaw = new Thaw([], this.options));\n    } else {\n      thaw = thaws[this.index];\n    }\n    this.index++;\n    if (this.index >= this.count) {\n      this.index = 0;\n    }\n\n    return thaw;\n  }\n};"]}