{"version":3,"sources":["../../src/recurrent/rnn-time-step.js"],"names":["RNNTimeStep","model","outputSize","lastHiddenSize","hiddenLayers","length","outputConnector","RandomMatrix","output","layers","equation","Equation","outputs","equationConnection","equationConnections","initialLayerInputs","getEquation","input","Matrix","inputSize","push","i","max","add","multiply","equations","allMatrices","map","size","createHiddenLayers","Error","hiddenMatrix","property","hasOwnProperty","createOutputMatrix","backpropagate","rawInput","outputLookup","run","runObject","runNumbers","runArrays","count","forecast","forecastNumbers","forecastObjects","forecastArrays","data","options","trainOpts","Object","assign","constructor","trainDefaults","iterations","errorThresh","log","console","logPeriod","callback","callbackPeriod","setSize","formatData","error","Infinity","verifyIsInitialized","sum","j","err","trainPattern","isNaN","trainInput","trainInputOutput","trainArrays","trainNumbers","initialize","dataShape","lookup","join","keys","toTable2D","toInputTable2D","toOutputTable2D","bindEquation","errorSum","predictTarget","end","isRunnable","inputLookup","toArray","inputLookupLength","lastOutput","runInput","weights","equationIndex","result","inputArray","toArrayShort","toObjectPartial","outputLookupLength","toObject","value","object","totalSize","inputIndex","outputIndex","toArrays","outputMatrix","slice","Float32Array","from","lookupTable","LookupTable","table","datum","array","ArrayLookupTable","formattedData","misclasses","splice","target","errorMSE","errorsAbs","Math","abs","misclass","actual","errors","errorCount","p","k","total","addKeys","defaults","type","name","hiddenLayer","toJSON","json","hiddenSizes","forEach","fromJSON","states","jsonString","JSON","stringify","matrixOrigin","m","stateIndex","state","previousConnectionIndex","left","rows","columns","right","product","connection","indexOf","matrixToString","formatInputData","formatOutputData","toInner","fnString","toString","split","shift","pop","replace","fileName","fnName","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","forwardFn","forceForecast","src","zeros","softmax","randomF","sampleI","maxI","Function","RNN","learningRate","decayRate","smoothEps","regc","clipval"],"mappings":"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","file":"rnn-time-step.js","sourcesContent":["import Matrix from './matrix';\nimport RandomMatrix from './matrix/random-matrix';\nimport Equation from './matrix/equation';\nimport RNN from './rnn';\nimport zeros from '../utilities/zeros';\nimport softmax from './matrix/softmax';\nimport {randomF} from '../utilities/random';\nimport sampleI from './matrix/sample-i';\nimport maxI from './matrix/max-i';\nimport lookup from \"../lookup\";\nimport LookupTable from '../utilities/lookup-table';\nimport ArrayLookupTable from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array } from '../utilities/cast';\n\nexport default class RNNTimeStep extends RNN {\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {number[]|number[][]|object|object[][]} [rawInput]\n   * @returns {number[]|number|object|object[]|object[][]}\n   */\n  run(rawInput) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(rawInput);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(rawInput);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(rawInput);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.forecast = this.runObject;\n        return this.runObject(input);\n      }\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    if (this.outputLookup) {\n      this.forecast = this.forecastObjects;\n      return this.forecastObjects(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n\n    if (this.inputSize === 1 || !this.inputSize) {\n      this.setSize(data);\n    }\n\n    data = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized(data);\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  setSize(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        this.inputSize = this.outputSize = data[0][0].length;\n        break;\n      case 'array,array,object,number':\n        this.inputSize = this.outputSize = Object.keys(lookup.toTable2D(data)).length;\n        break;\n      case 'array,datum,array,array,number':\n        this.inputSize = this.outputSize = data[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        this.inputSize = Object.keys(lookup.toInputTable2D(data)).length;\n        this.outputSize = Object.keys(lookup.toOutputTable2D(data)).length;\n        break;\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights[0];\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(this.outputLookup, this.forecastNumbers(inputArray, this.outputLookupLength - inputArray.length), inputArray.length);\n    }\n    return lookup.toObject(this.outputLookup, this.forecastNumbers(lookup.toArray(this.inputLookup, input, this.inputLookupLength), this.outputLookupLength));\n  }\n\n  forecastObjects(input, count) {\n    input = input.map(value => lookup.toArray(this.outputLookup, value, this.outputLookupLength));\n    return this.forecastArrays(input, count).map(value => lookup.toObject(this.outputLookup, value));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    if (this.inputLookup) {\n      input = lookup.toArrays(this.inputLookup, input, this.inputLookupLength);\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights.slice(0));\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    const result = [];\n    switch (dataShape) {\n      case 'array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from([data[i]]));\n        }\n        return [result];\n      }\n      case 'array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n        if (this.inputSize !== data[0].length) {\n          throw new Error('inputSize must match data input size');\n        }\n        if (this.outputSize !== data[0].length) {\n          throw new Error('outputSize must match data input size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from(data[i]));\n        }\n        return [result];\n      }\n      case 'array,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(objectToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,datum,array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: arrayToFloat32Arrays(datum.input),\n            output: arrayToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,datum,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const inputLookup = new LookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new LookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectToFloat32Arrays(datum.input),\n            output: objectToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < data.length; i++) {\n          result.push(arraysToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,array,object,number': {\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const array = [];\n          for (let j = 0; j < data[i].length; j++) {\n            array.push(objectToFloat32Array(data[i][j], this.inputLookup, this.inputLookupLength));\n          }\n          result.push(array);\n        }\n        return result;\n      }\n      case 'array,datum,array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output)\n            });\n          }\n        } else {\n          if (this.inputSize !== data[0].input[0].length) {\n            throw new Error('inputSize must match data input size');\n          }\n          if (this.outputSize !== data[0].output[0].length) {\n            throw new Error('outputSize must match data output size');\n          }\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output)\n            });\n          }\n        }\n        return result;\n      }\n      case 'array,datum,array,object,number': {\n        if (!this.inputLookup) {\n          const inputLookup = new ArrayLookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new ArrayLookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectsToFloat32Arrays(datum.input, this.inputLookup, this.inputLookupLength),\n            output: objectsToFloat32Arrays(datum.output, this.outputLookup, this.outputLookupLength)\n          });\n        }\n        return result;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    const formattedData = this.formatData(data);\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number': {\n        if (this.inputSize === 1) {\n          for (let i = 0; i < formattedData.length; i++) {\n            const input = formattedData[i];\n            const output = this.run(input.splice(0, input.length - 1));\n            const target = input[input.length - 1][0];\n            const error = target - output;\n            const errorMSE = error * error;\n            errorSum += errorMSE;\n            const errorsAbs = Math.abs(errorMSE);\n            if (errorsAbs > this.trainOpts.errorThresh) {\n              const misclass = data[i];\n              Object.assign(misclass, {\n                value: input,\n                actual: output\n              });\n              misclasses.push(misclass);\n            }\n          }\n          break;\n        }\n        throw new Error('unknown data shape or configuration');\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.splice(0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            errorCount++;\n            const error = target[j] - output[j];\n            // mse\n            errors += error * error;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,object,number':\n      {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(lookup.toObjectPartial(this.outputLookup, input, 0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let p;\n          for (p in output) {}\n          const error = target[i] - output[p];\n          // mse\n          errors += error * error;\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.slice(0, input.length - 1));\n          const target = data[i][input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (const p in output) {\n            const error = target[p] - output[p];\n            // mse\n            errors += error * error;\n            errorCount++;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,number':\n      case 'array,datum,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            const error = datum.output[j][0] - output[j];\n            errors += error * error;\n            errorCount++;\n          }\n\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            Object.assign(misclass, {\n              actual: this.outputLookup\n                ? lookup.toObject(this.outputLookup, output)\n                : output\n            });\n            misclasses.push(misclass);\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (let k = 0; k < output[j].length; k++) {\n              const error = datum.output[j][k] - output[j][k];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (const p in output[j]) {\n              const error = data[i].output[j][p] - output[j][p];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n\n    return {\n      error: errorSum / formattedData.length,\n      misclasses: misclasses,\n      total: formattedData.length\n    };\n  }\n\n  addFormat(value) {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(value.input, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(value.output, this.outputLookup);\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(value, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        for (let i = 0; i < value.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(value[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        for (let i = 0; i < value.input.length; i++) {\n          this.inputLookup = lookup.addKeys(value.input[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        for (let i = 0; i < value.output.length; i++) {\n          this.outputLookup = lookup.addKeys(value.output[i], this.outputLookup);\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON()\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const model = this.model;\n    const equations = this.model.equations;\n    const inputSize = this.inputSize;\n    const inputLookup = this.inputLookup;\n    const inputLookupLength = this.inputLookupLength;\n    const outputLookup = this.outputLookup;\n    const outputLookupLength = this.outputLookupLength;\n    const equation = equations[1];\n    const states = equation.states;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${ JSON.stringify(inputLookup) };\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${ JSON.stringify(inputLookup) };\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${ inputLookupLength });\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${ JSON.stringify(outputLookup) };\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${ JSON.stringify(outputLookup) };\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace(\n          'product.weights = _input.weights = _this.inputValue;',\n          inputLookup && inputSize === 1\n            ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n            : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${ this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput' };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n      forceForecast\n        ? inputLookup === outputLookup\n          ? inputLookupLength\n          : `input.length + ${ outputLookupLength - 1 }`\n        : 'input.length' };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    ${ inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;' }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n        ? 'return output[0]'\n        : 'return output'\n  };\n  ${ formatInputData() }\n  ${ formatOutputData() }\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomF.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: RNN.defaults.learningRate,\n  decayRate: RNN.defaults.decayRate,\n  smoothEps: RNN.defaults.smoothEps,\n  regc: RNN.defaults.regc,\n  clipval: RNN.defaults.clipval\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;\n"]}