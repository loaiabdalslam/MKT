{"version":3,"sources":["../../../src/recurrent/matrix/multiply-element-b.js"],"names":["multiplyElementB","product","left","right","i","weights","length","deltas"],"mappings":";;;;;kBAMwBA,gB;AANxB;;;;;;AAMe,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,IAAnC,EAAyCC,KAAzC,EAAgD;AAC7D,OAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIF,KAAKG,OAAL,CAAaC,MAAhC,EAAwCF,GAAxC,EAA6C;AAC3CF,SAAKK,MAAL,CAAYH,CAAZ,IAAiBD,MAAME,OAAN,CAAcD,CAAd,IAAmBH,QAAQM,MAAR,CAAeH,CAAf,CAApC;AACAD,UAAMI,MAAN,CAAaH,CAAb,IAAkBF,KAAKG,OAAL,CAAaD,CAAb,IAAkBH,QAAQM,MAAR,CAAeH,CAAf,CAApC;AACD;AACF","file":"multiply-element-b.js","sourcesContent":["/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiplyElementB(product, left, right) {\n  for(let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n"]}