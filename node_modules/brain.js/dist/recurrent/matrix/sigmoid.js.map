{"version":3,"sources":["../../../src/recurrent/matrix/sigmoid.js"],"names":["sigmoid","product","left","i","weights","length","Math","exp","deltas","sig","x"],"mappings":";;;;;kBAIwBA,O;AAJxB;;;;AAIe,SAASA,OAAT,CAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC;AAC7C;AACA,OAAI,IAAIC,IAAE,CAAV,EAAaA,IAAID,KAAKE,OAAL,CAAaC,MAA9B,EAAsCF,GAAtC,EAA2C;AACzCF,YAAQG,OAAR,CAAgBD,CAAhB,IAAqB,KAAM,IAAIG,KAAKC,GAAL,CAAS,CAACL,KAAKE,OAAL,CAAaD,CAAb,CAAV,CAAV,CAArB;AACAF,YAAQO,MAAR,CAAeL,CAAf,IAAoB,CAApB;AACD;AACF;;AAGD,SAASM,GAAT,CAAaC,CAAb,EAAgB;AACd;AACA,SAAO,KAAK,IAAIJ,KAAKC,GAAL,CAAS,CAACG,CAAV,CAAT,CAAP;AACD","file":"sigmoid.js","sourcesContent":["/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for(let i=0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / ( 1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}"]}